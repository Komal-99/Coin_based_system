// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String        @id @default(cuid())
  username   String?       
  email       String        @unique
  password    String
  createdAt   DateTime      @default(now())
  Credit      Credit[]
  Transaction Transaction[]
  Payment     Payment[]
  Wallet      Wallet?

  @@index([username])
}

model Wallet {
  id                String   @id @default(cuid())
  balance           Int      @default(100)
  last_updated_date DateTime @default(now())
  user              User     @relation(fields: [userId], references: [id])
  userId            String   @unique
}

model Credit {
  //  User credits
  id              String     @id @default(cuid())
  user_id         User       @relation(fields: [userId], references: [id])
  credits         Int        @default(100)
  type            CreditType // type of credit - refresh  or purchased 
  last_reset_date DateTime?
  userId          String
}

model Transaction {
  // Purchased credits
  id               String          @id @default(cuid())
  user_id          User            @relation(fields: [userId], references: [id])
  type             TransactionType
  amount           Int
  transaction_date DateTime        @default(now())
  userId           String
  Payment          Payment[]
}

model Payment {
  //  User payments  to purchase credits
  id               String        @id @default(cuid())
  user_id          User          @relation(fields: [userId], references: [id])
  transaction_id   Transaction   @relation(fields: [transactionId], references: [id])
  amount           Decimal
  payment_method   String
  payment_status   PaymentStatus
  Stripe_charge_id String
  payment_date     DateTime      @default(now())
  userId           String
  transactionId    String
}

enum CreditType {
  REFRESH
  PURCHASED
  CONSUMED
}

enum PaymentStatus {
  PENDING
  SUCCESS
  FAILED
}

enum TransactionType {
  PURCHASE
  REFRESH
  CONSUMED
}
